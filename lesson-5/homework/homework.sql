--## üü¢ Easy-Level Tasks (10)

-- –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
CREATE DATABASE StoreDB;
USE StoreDB;

-- –¢–∞–±–ª–∏—Ü–∞ Products (–¢–æ–≤–∞—Ä—ã)
CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100),
    CategoryID INT,
    Price DECIMAL(10,2),
    Stock INT
);

-- –¢–∞–±–ª–∏—Ü–∞ Products_Discontinued (–°–Ω—è—Ç—ã–µ —Å –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä—ã)
CREATE TABLE Products_Discontinued (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100)
);

-- –¢–∞–±–ª–∏—Ü–∞ Customers (–ö–ª–∏–µ–Ω—Ç—ã)
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    CustomerName VARCHAR(100),
    Country VARCHAR(50)
);

-- –¢–∞–±–ª–∏—Ü–∞ Orders (–ó–∞–∫–∞–∑—ã)
CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    ProductID INT,
    CustomerID INT,
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

-- –¢–∞–±–ª–∏—Ü–∞ Employees (–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏)
CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    Name VARCHAR(100),
    Department VARCHAR(50),
    Country VARCHAR(50)
);

--_________________________________________________________________________________

-- –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É Products
INSERT INTO Products (ProductID, ProductName, CategoryID, Price, Stock) VALUES
(1, 'Laptop', 1, 1200.00, 50),
(2, 'Mouse', 2, 20.00, 500),
(3, 'Keyboard', 2, 50.00, 150),
(4, 'Monitor', 1, 300.00, 80);
Select * from Products

-- –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É Products_Discontinued
INSERT INTO Products_Discontinued (ProductID, ProductName) VALUES
(5, 'Old Mouse'),
(6, 'Old Keyboard');
Select * from Products_Discontinued

-- –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É Customers
INSERT INTO Customers (CustomerID, CustomerName, Country) VALUES
(1, 'Alice', 'USA'),
(2, 'Bob', 'Germany'),
(3, 'Charlie', 'USA');
Select * from Customers

-- –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É Orders
INSERT INTO Orders (OrderID, ProductID, CustomerID) VALUES
(1, 1, 1),
(2, 2, 2),
(3, 3, 3);
Select * from Orders

-- –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É Employees
INSERT INTO Employees (EmployeeID, Name, Department, Country) VALUES
(1, 'John', 'Sales', 'USA'),
(2, 'Sarah', 'HR', 'Germany'),
(3, 'Mike', 'Sales', 'France');
Select * from Employees

--__________________________________________________________________________________

-- 1. –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ ProductName –≤ Name
SELECT ProductName AS Name FROM Products;

-- 2. –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Customers –≤ Client
SELECT * FROM Customers AS Client;

-- 3. –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ ProductName –∏–∑ Products –∏ Products_Discontinued —Å –ø–æ–º–æ—â—å—é UNION
SELECT ProductName FROM Products
UNION
SELECT ProductName FROM Products_Discontinued;

-- 4. –ü–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü Products –∏ Products_Discontinued –ø–æ ProductName
SELECT ProductName FROM Products
INTERSECT
SELECT ProductName FROM Products_Discontinued;

-- 5. –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ Products –∏ Orders —Å –ø–æ–º–æ—â—å—é UNION ALL
SELECT ProductID, ProductName, CategoryID, Price, Stock FROM Products
UNION ALL
SELECT ProductID, NULL, NULL, NULL, NULL FROM Orders;

-- 6. –í—ã–±–æ—Ä —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö CustomerName –∏ Country
SELECT DISTINCT CustomerName, Country FROM Customers;

-- 7. –£—Å–ª–æ–≤–Ω—ã–π —Å—Ç–æ–ª–±–µ—Ü, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 'High' –ø—Ä–∏ Price > 100, –∏–Ω–∞—á–µ 'Low'
SELECT ProductName, Price,
       CASE 
           WHEN Price > 100 THEN 'High'
           ELSE 'Low'
       END AS PriceCategory
FROM Products;

-- 8. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ –æ—Ç–¥–µ–ª—É –∏ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ
SELECT Country, COUNT(EmployeeID) AS EmployeeCount
FROM Employees
WHERE Department = 'Sales'
GROUP BY Country;

-- 9. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
SELECT CategoryID, COUNT(ProductID) AS ProductCount
FROM Products
GROUP BY CategoryID;

-- 10. –ù–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 'Yes', –µ—Å–ª–∏ Stock > 100, –∏–Ω–∞—á–µ 'No'
SELECT ProductName, Stock, 
       IIF(Stock > 100, 'Yes', 'No') AS StockStatus
FROM Products;


--## üü† Medium-Level Tasks (10)

-- 1. –°–æ–∑–¥–∞–µ–º –±–∞–∑—É
CREATE DATABASE BusinessDB;
USE BusinessDB;

-- 2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    CustomerName VARCHAR(100),
    Country VARCHAR(50),
    City VARCHAR(50),
    Email VARCHAR(100),
    Phone VARCHAR(20)
);

CREATE TABLE Orders (
    OrderID INT IDENTITY(1,1) PRIMARY KEY,
    CustomerID INT,
    OrderDate DATE,
    TotalAmount DECIMAL(10,2),
    Status VARCHAR(20),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID) ON DELETE CASCADE
);

CREATE TABLE Products (
    ProductID INT IDENTITY(1,1) PRIMARY KEY,
    ProductName VARCHAR(100),
    Price DECIMAL(10,2)
);

CREATE TABLE OutOfStock (
    ProductID INT IDENTITY(1,1) PRIMARY KEY,
    ProductName VARCHAR(100)
);

CREATE TABLE Employees (
    EmployeeID INT IDENTITY(1,1) PRIMARY KEY,
    Name VARCHAR(100),
    Age INT,
    Salary DECIMAL(10,2),
    Department VARCHAR(50)
);

CREATE TABLE Sales (
    SaleID INT IDENTITY(1,1) PRIMARY KEY,
    Region VARCHAR(50),
    SalesAmount DECIMAL(10,2)
);

CREATE TABLE DiscontinuedProducts (
    ProductID INT IDENTITY(1,1) PRIMARY KEY,
    ProductName VARCHAR(100)
);


-- 3. –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–º–∏
INSERT INTO Customers (CustomerID, CustomerName, Country, City, Email, Phone) VALUES
(1, 'John Doe', 'USA', 'New York', 'john@example.com', '123-456-789'),
(2, 'Alice Smith', 'UK', 'London', 'alice@example.com', '234-567-890'),
(3, 'Bob Brown', 'Canada', 'Toronto', 'bob@example.com', '345-678-901'),
(4, 'Charlie Johnson', 'Germany', 'Berlin', 'charlie@example.com', '456-789-012');
Select * from Customers

INSERT INTO Orders (CustomerID, OrderDate, TotalAmount, Status) VALUES
(1, '2024-01-10', 500.00, 'Shipped'),
(2, '2024-01-12', 750.00, 'Pending'),
(1, '2024-02-01', 200.00, 'Delivered'),
(3, '2024-02-15', 900.00, 'Shipped'),
(4, '2024-02-20', 300.00, 'Canceled');
Select * from Orders

INSERT INTO Products (ProductName, Price) VALUES
('Laptop', 999.99),
('Smartphone', 699.99),
('Tablet', 399.99),
('Headphones', 199.99);
Select * from Products

INSERT INTO OutOfStock (ProductName) VALUES
('Smartwatch'),
('Wireless Charger'),
('Bluetooth Speaker');
Select * from OutOfStock

INSERT INTO Employees (Name, Age, Salary, Department) VALUES
('Michael Scott', 45, 5000, 'HR'),
('Dwight Schrute', 40, 5500, 'Sales'),
('Pam Beesly', 30, 4000, 'Reception'),
('Jim Halpert', 35, 6200, 'Sales'),
('Angela Martin', 38, 4800, 'Accounting');
Select * from Employees

INSERT INTO Sales (Region, SalesAmount) VALUES
('North America', 10000),
('Europe', 8500),
('Asia', 12000),
('South America', 5000);
Select * from Sales

INSERT INTO DiscontinuedProducts (ProductName) VALUES
('DVD Player'),
('MP3 Player'),
('CRT Monitor');
Select * from DiscontinuedProducts

--4. –í—ã–ø–æ–ª–Ω—è–µ–º SQL-–∑–∞–ø—Ä–æ—Å—ã

--1Ô∏è1) INNER JOIN: –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑—ã –∏ –∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
SELECT o.OrderID, c.CustomerName AS ClientName, o.TotalAmount
FROM Orders o
INNER JOIN Customers c ON o.CustomerID = c.CustomerID;

--12Ô∏è) UNION: –û–±—ä–µ–¥–∏–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
SELECT ProductName FROM Products
UNION
SELECT ProductName FROM OutOfStock;

--13Ô∏è) EXCEPT: –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∏ —Å–Ω—è—Ç—ã–º–∏ —Å –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–∞–º–∏
SELECT ProductName FROM Products
EXCEPT
SELECT ProductName FROM DiscontinuedProducts;

--14Ô∏è) CASE: –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ —á–∏—Å–ª—É –∑–∞–∫–∞–∑–æ–≤
SELECT c.CustomerName, 
       COUNT(o.OrderID) AS OrderCount,
       CASE 
           WHEN COUNT(o.OrderID) > 5 THEN 'Eligible'
           ELSE 'Not Eligible'
       END AS CustomerStatus
FROM Customers c
LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerName;

--15Ô∏è) IIF: –ü–æ–º–µ—á–∞–µ–º –¥–æ—Ä–æ–≥–∏–µ —Ç–æ–≤–∞—Ä—ã
SELECT ProductName, Price, 
       IIF(Price > 100, 'Expensive', 'Affordable') AS PriceCategory
FROM Products;

--16Ô∏è) GROUP BY: –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
SELECT CustomerID, COUNT(*) AS OrderCount
FROM Orders
GROUP BY CustomerID;

--17Ô∏è) WHERE: –ù–∞—Ö–æ–¥–∏–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –º–ª–∞–¥—à–µ 25 –ª–µ—Ç –∏–ª–∏ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π –±–æ–ª—å—à–µ 6000
SELECT * FROM Employees
WHERE Age < 25 OR Salary > 6000;

--18Ô∏è) GROUP BY: –°—á–∏—Ç–∞–µ–º –ø—Ä–æ–¥–∞–∂–∏ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º
SELECT Region, SUM(SalesAmount) AS TotalSales
FROM Sales
GROUP BY Region;

--19Ô∏è) LEFT JOIN: –ö–ª–∏–µ–Ω—Ç—ã –∏ –∏—Ö –∑–∞–∫–∞–∑—ã
SELECT c.CustomerName, o.OrderID, o.OrderDate AS Order_Date, o.TotalAmount
FROM Customers c
LEFT JOIN Orders o ON c.CustomerID = o.CustomerID;

--20) IF (UPDATE): –ü–æ–≤—ã—à–∞–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –≤ HR –Ω–∞ 10%
UPDATE Employees
SET Salary = Salary * 1.10
WHERE Department = 'HR';
Select * from Employees
